name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate application
        run: |
          cd app
          python -c "
          import constants
          import db
          import auth
          print('âœ“ Release validation successful')
          "

  create-release:
    name: Create Release
    needs: validate-release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## Changes in this Release

            ### New Features
            - Check the commit history for detailed changes

            ### Bug Fixes
            - Various bug fixes and improvements

            ### Docker Images
            - Multi-architecture Docker images available at
              `samuelcaldas/ownfoil:${{ steps.get_version.outputs.version }}`
            - Latest image: `samuelcaldas/ownfoil:latest`

            ### Installation
            ```bash
            # Using Docker
            docker run -d -p 8465:8465 \
              -v /your/game/directory:/games \
              -v /your/config/directory:/app/config \
              --name ownfoil \
              samuelcaldas/ownfoil:${{ steps.get_version.outputs.version }}

            # Using docker-compose
            # Update image tag in docker-compose.yml and run:
            docker-compose up -d
            ```
          draft: false
          prerelease: false

  build-and-push-docker:
    name: Build and Push Docker Images
    needs: validate-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: samuelcaldas/ownfoil
          tags: |
            type=semver,pattern={{version}},value=${{ steps.get_version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.get_version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.get_version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
