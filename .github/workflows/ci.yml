name: CI/CD Pipeline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pylint bandit safety

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Security check with bandit
        run: |
          bandit -r app -f json -o bandit-report.json || true
          bandit -r app

      - name: Safety check for vulnerabilities
        run: |
          safety check

      - name: Validate Python imports
        run: |
          cd app
          python -c "
          try:
              import constants
              import db
              import auth
              print('✓ Core modules imported successfully')
          except ImportError as e:
              print(f'✗ Import error: {e}')
              exit(1)
          "

      - name: Validate Flask application structure
        run: |
          cd app
          python -c "
          import os
          required_files = ['app.py', 'auth.py', 'constants.py', 'db.py']
          missing = [f for f in required_files if not os.path.exists(f)]
          if missing:
              print(f'Missing files: {missing}')
              exit(1)
          print('✓ All required files present')
          "

      - name: Upload bandit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report-${{ matrix.python-version }}
          path: bandit-report.json

  validate-workflows:
    name: Validate Workflows
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yamllint
        run: pip install yamllint

      - name: Lint GitHub workflows
        run: |
          yamllint .github/workflows/

  validate-docker:
    name: Validate Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ownfoil:test

      - name: Test Docker image
        run: |
          docker run --rm -d --name ownfoil-test -p 8465:8465 ownfoil:test
          sleep 10
          if curl -f http://localhost:8465 >/dev/null 2>&1; then
            echo "✓ Docker container is responding"
          else
            echo "✗ Docker container is not responding"
            docker logs ownfoil-test
            exit 1
          fi
          docker stop ownfoil-test
