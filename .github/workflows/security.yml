name: Security Scanning

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly scan on Mondays at 6 AM UTC

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-codeql-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-deps-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit
          pip install -r requirements.txt

      - name: Run Safety check
        run: |
          safety check --json --output safety-report.json || echo "Safety check completed with findings"
          safety check --output text || echo "Safety check completed with findings"

      - name: Run pip-audit
        run: |
          pip-audit --desc --output=json --output-file=pip-audit-report.json || echo "pip-audit completed with findings"
          pip-audit --desc || echo "pip-audit completed with findings"

      - name: Upload vulnerability reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnerability-reports
          path: |
            safety-report.json
            pip-audit-report.json
          retention-days: 30

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    
    concurrency:
      group: ${{ github.workflow }}-container-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for scanning
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: ownfoil:scan
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ownfoil:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'

      - name: Upload Trivy filesystem scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-fs-results.sarif'

  secret-scan:
    name: Secret Detection
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-secrets-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-scan, container-scan, secret-scan]
    if: always() && github.event_name == 'pull_request'
    
    steps:
      - name: Security Scan Summary
        run: |
          echo "## 🔒 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.codeql-analysis.result }}" == "success" ]]; then
            echo "- ✅ CodeQL Analysis: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ CodeQL Analysis: Failed or has findings" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.dependency-scan.result }}" == "success" ]]; then
            echo "- ✅ Dependency Scan: No critical vulnerabilities" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ Dependency Scan: Vulnerabilities found or scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.container-scan.result }}" == "success" ]]; then
            echo "- ✅ Container Scan: No critical vulnerabilities" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ Container Scan: Vulnerabilities found or scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.secret-scan.result }}" == "success" ]]; then
            echo "- ✅ Secret Detection: No secrets detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️ Secret Detection: Potential secrets found or scan failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the Security tab for detailed findings and recommendations." >> $GITHUB_STEP_SUMMARY